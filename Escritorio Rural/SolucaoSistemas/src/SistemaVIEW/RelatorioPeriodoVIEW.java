/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SistemaVIEW;

import SistemaCTR.PessoaCTR;
import SistemaDAO.ConectaBanco;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.net.URL;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Vinicius
 */
public class RelatorioPeriodoVIEW extends javax.swing.JDialog {

    DateFormat dataBR = new SimpleDateFormat("dd/MM/yyyy");
    DateFormat dataSQL = new SimpleDateFormat("yyyy-MM-dd");
    Date dataInicial, dataFinal;
    public static String indiceRelatorio = "";

    /**
     * Creates new form RelatorioPeriodoVIEW
     *
     * @param parent
     * @param modal
     */
    public RelatorioPeriodoVIEW(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        if (PrincipalVIEW.relatorioAnalitico == false && PrincipalVIEW.auditoria == false) {
            setTitle("RELATÓRIO POR PERÍODO");
        } else if (PrincipalVIEW.auditoria == true || PrincipalVIEW.relatorioAnalitico == true) {
            if (PrincipalVIEW.auditoria == true) {
                setTitle("AUDITORIA");
            } else if (PrincipalVIEW.relatorioAnalitico == true) {
                setTitle("ANALITICO CONTA CORRENTE");
            }

            this.setSize(336, 110);
            lblCodigo.setText("Período:");
            txtDataInicial.setBounds(47, 8, 90, 20);
            txtDataFinal.setBounds(170, 8, 90, 20);
            btnPesquisar.setVisible(false);
            lblPeriodo.setVisible(false);
            lblCliente.setVisible(false);
            txtCliente.setVisible(false);
            lblA.setBounds(144, 8, 20, 20);
            btnVisualizar.setBounds(4, 40, 80, 24);
            btnSair.setBounds(90, 40, 80, 24);
            txtCodigo.setVisible(false);
        }

        this.setLocationRelativeTo(null);
        UtilVIEW.Icone(this);
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblCodigo = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        lblCliente = new javax.swing.JLabel();
        txtCliente = new javax.swing.JTextField();
        lblPeriodo = new javax.swing.JLabel();
        lblA = new javax.swing.JLabel();
        txtDataInicial = new javax.swing.JFormattedTextField();
        txtDataFinal = new javax.swing.JFormattedTextField();
        btnVisualizar = new javax.swing.JButton();
        btnPesquisar = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        getContentPane().setLayout(null);

        lblCodigo.setText("Código:");
        getContentPane().add(lblCodigo);
        lblCodigo.setBounds(4, 10, 50, 14);

        txtCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCodigoKeyPressed(evt);
            }
        });
        getContentPane().add(txtCodigo);
        txtCodigo.setBounds(4, 30, 58, 20);

        lblCliente.setText("Cliente:");
        getContentPane().add(lblCliente);
        lblCliente.setBounds(70, 10, 60, 14);

        txtCliente.setEditable(false);
        getContentPane().add(txtCliente);
        txtCliente.setBounds(70, 30, 260, 20);

        lblPeriodo.setText("Período:");
        getContentPane().add(lblPeriodo);
        lblPeriodo.setBounds(4, 60, 60, 14);

        lblA.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblA.setText("a");
        getContentPane().add(lblA);
        lblA.setBounds(144, 58, 20, 20);

        try {
            txtDataInicial.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtDataInicial.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDataInicialKeyPressed(evt);
            }
        });
        getContentPane().add(txtDataInicial);
        txtDataInicial.setBounds(50, 60, 90, 20);

        try {
            txtDataFinal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        getContentPane().add(txtDataFinal);
        txtDataFinal.setBounds(170, 60, 90, 20);

        btnVisualizar.setText("Visualizar");
        btnVisualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVisualizarActionPerformed(evt);
            }
        });
        getContentPane().add(btnVisualizar);
        btnVisualizar.setBounds(10, 90, 90, 23);

        btnPesquisar.setText("Pesquisar");
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });
        getContentPane().add(btnPesquisar);
        btnPesquisar.setBounds(110, 90, 80, 24);

        btnSair.setText("Sair");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });
        getContentPane().add(btnSair);
        btnSair.setBounds(200, 90, 90, 23);

        setBounds(0, 0, 352, 166);
    }// </editor-fold>//GEN-END:initComponents

    private void txtCodigoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoKeyPressed
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            if (txtCodigo.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Preencher o código!", "ATENÇÃO",
                        JOptionPane.WARNING_MESSAGE);
                txtCodigo.requestFocusInWindow();
            } else {
                RestaurarCliente();
                txtDataInicial.requestFocusInWindow();
            }

        }
    }//GEN-LAST:event_txtCodigoKeyPressed

    private void txtDataInicialKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDataInicialKeyPressed
        try {
            if(evt.getKeyChar() == KeyEvent.VK_ENTER){
                txtDataFinal.requestFocusInWindow();
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtDataInicialKeyPressed

    private void btnVisualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVisualizarActionPerformed
        if (txtDataInicial.getText().equals("  /  /    ") || txtDataFinal.getText().equals("  /  /    ")) {
            JOptionPane.showMessageDialog(null, "Preencher as datas!", "ATENÇÃO",
                    JOptionPane.WARNING_MESSAGE);
        } else {
            try {
                int op = -1;
                op = JOptionPane.showConfirmDialog(null, "Impressora esta ligada?", "PERGUNTA",
                        JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if (op == 0) {
                    this.dispose();
                    dataInicial = dataBR.parse(txtDataInicial.getText());
                    dataFinal = dataBR.parse(txtDataFinal.getText());
                    URL arquivo = null;
                    JasperPrint rel = null;
                    Map parametros = new HashMap();
                    ConectaBanco.ConectaPostgres();
                    if (PrincipalVIEW.relatorioAnalitico == false && PrincipalVIEW.auditoria == false) {
                        arquivo = getClass().getResource("/Relatorios/Extrato.jasper");
                        PrincipalVIEW.relExtrato = false;
                        if (arquivo == null) {
                            System.out.println("ARQUIVO INEXISTENTE");
                        } else {

                            parametros.put("cliente", txtCodigo.getText());
                            parametros.put("dataBR1", dataBR.format(dataInicial));
                            parametros.put("dataBR2", dataBR.format(dataFinal));
                            parametros.put("dataSQL1", dataSQL.format(dataInicial));
                            parametros.put("dataSQL2", dataSQL.format(dataFinal));
                            parametros.put("saldoAtualizado", Double.parseDouble(
                                    indiceRelatorio.replace("R$", "").replace(",",".")));
                        }

                    } else if (PrincipalVIEW.auditoria == true || PrincipalVIEW.relatorioAnalitico == true) {
                        if (PrincipalVIEW.auditoria == true) {
                            arquivo = getClass().getResource("/Relatorios/Auditoria.jasper");
                            PrincipalVIEW.auditoria = false;
                        } else if (PrincipalVIEW.relatorioAnalitico == true) {
                            arquivo = getClass().getResource("/Relatorios/Analitico.jasper");
                            parametros.put("dataBR1", dataBR.format(dataInicial));
                            parametros.put("dataBR2", dataBR.format(dataFinal));
                             parametros.put("saldoAtualizado", Double.parseDouble(
                                    indiceRelatorio.replace("R$", "").replace(",",".")));
                            PrincipalVIEW.relatorioAnalitico = false;
                        }

                        if (arquivo == null) {
                            System.out.println("ARQUIVO INEXISTENTE");
                        } else {
                            parametros.put("dataSQL1", dataSQL.format(dataInicial));
                            parametros.put("dataSQL2", dataSQL.format(dataFinal));
                        }

                    }

                    JasperReport jr;
                    try {
                        jr = (JasperReport) JRLoader.loadObject(arquivo);
                        rel = JasperFillManager.fillReport(jr, parametros, ConectaBanco.con);
                        JasperViewer.viewReport(rel, false);
                    } catch (JRException ex) {
                        System.out.println("" + ex.getMessage());
                    }
                    //JOptionPane.showMessageDialog(this, arquivo.toString());
                } else if (op == 1) {

                }
            } catch (HeadlessException | ParseException e) {
            }
        }
    }//GEN-LAST:event_btnVisualizarActionPerformed

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        PrincipalVIEW.cliente = true;
        new PesquisaVIEW(null, true).setVisible(true);
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        int op = -1;
        op = JOptionPane.showConfirmDialog(null, "Deseja sair?", "PERGUNTA",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (op == 0) {
            if (PrincipalVIEW.relatorioAnalitico == true) {
                PrincipalVIEW.relatorioAnalitico = false;
            } else if (PrincipalVIEW.auditoria == true) {
                PrincipalVIEW.auditoria = false;
            } else if(PrincipalVIEW.relExtrato == true){
                PrincipalVIEW.relExtrato = false;
            }
            this.dispose();
        } else if (op == 1) {

        }
    }//GEN-LAST:event_btnSairActionPerformed

    public void RestaurarCliente() {
        try {
            PessoaCTR objpessoaCTR = new PessoaCTR();
            ResultSet rs;
            rs = objpessoaCTR.ConsultarClienteCTR(txtCodigo.getText(), "null");
            if (rs.next()) {
                txtCliente.setText(rs.getString("nome"));

            } else {
                JOptionPane.showMessageDialog(null, "Código não encontrado!", "ATENÇÃO",
                        JOptionPane.WARNING_MESSAGE);
            }
        } catch (SQLException | HeadlessException e) {
            JOptionPane.showMessageDialog(null, "Erro ao Restaurar Cliente", "ATENÇÃO",
                    JOptionPane.WARNING_MESSAGE);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RelatorioPeriodoVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RelatorioPeriodoVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RelatorioPeriodoVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RelatorioPeriodoVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                RelatorioPeriodoVIEW dialog = new RelatorioPeriodoVIEW(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JButton btnSair;
    private javax.swing.JButton btnVisualizar;
    private javax.swing.JLabel lblA;
    private javax.swing.JLabel lblCliente;
    private javax.swing.JLabel lblCodigo;
    private javax.swing.JLabel lblPeriodo;
    private javax.swing.JTextField txtCliente;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JFormattedTextField txtDataFinal;
    private javax.swing.JFormattedTextField txtDataInicial;
    // End of variables declaration//GEN-END:variables
}
