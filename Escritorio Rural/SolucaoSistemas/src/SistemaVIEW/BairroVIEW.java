/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SistemaVIEW;

import SistemaCTR.BairroCTR;
import SistemaCTR.CidadeCTR;
import SistemaCTR.EnderecoCTR;
import SistemaCTR.EstadoCTR;
import SistemaCTR.PlanoContasCTR;
import SistemaCTR.ProfissaoCTR;
import SistemaCTR.TipoTelefoneCTR;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author Vinicius
 */
public class BairroVIEW extends javax.swing.JDialog {

    /**
     * Creates new form BairroVIEW
     *
     * @param parent
     * @param modal
     */
    public BairroVIEW(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        UtilVIEW.Icone(this);
        this.setLocationRelativeTo(null);
        txtCodigo.setDocument(new SomenteNumeros(4));
        UtilVIEW.DesabilitarMenus(btnSalvar, btnPesquisar);
        if (PrincipalVIEW.bairro == true) {
            setTitle("CADASTRO DE BAIRRO");
            rbReceita.setVisible(false);
            rbDespesa.setVisible(false);
            lblEstado.setVisible(false);
            cbxEstado.setVisible(false);
            txtCEP.setVisible(false);
            lblCEP.setVisible(false);
        } else if (PrincipalVIEW.planoContas == true) {
            setTitle("PLANO DE CONTAS");
            lblEstado.setVisible(false);
            cbxEstado.setVisible(false);
            lblCEP.setVisible(false);
            txtCEP.setVisible(false);
        } else if (PrincipalVIEW.endereco == true) {
            setTitle("CADASTRO DE ENDEREÇO");
            UtilVIEW.mascaraCep(txtCEP);
            lblEstado.setVisible(false);
            cbxEstado.setVisible(false);
            rbReceita.setVisible(false);
            rbDespesa.setVisible(false);
            lblCEP.setBounds(2, 48, 50, 20);
            txtCEP.setText("38.280-000");
            txtCEP.setBounds(2, 66, 80, 20);
        } else if (PrincipalVIEW.cidade == true) {
            setTitle("CADASTRO DE CIDADE");
            lblEstado.setBounds(2, 48, 60, 20);
            cbxEstado.setBounds(2, 66, 50, 20);
            rbReceita.setVisible(false);
            rbDespesa.setVisible(false);
            lblCEP.setVisible(false);
            txtCEP.setVisible(false);
        } else if (ClientesVIEW.profissao == true) {
            setTitle("CADASTRO DE PROFISSÃO");
            rbReceita.setVisible(false);
            rbDespesa.setVisible(false);
            lblCEP.setVisible(false);
            txtCEP.setVisible(false);
            lblEstado.setVisible(false);
            cbxEstado.setVisible(false);
        } else if (ClientesVIEW.tipotel == true) {
            setTitle("CADASTRO DE TIPO TELEFONE");
            rbReceita.setVisible(false);
            rbDespesa.setVisible(false);
            lblCEP.setVisible(false);
            txtCEP.setVisible(false);
            lblEstado.setVisible(false);
            cbxEstado.setVisible(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField2 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        txtNome = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        rbReceita = new javax.swing.JRadioButton();
        rbDespesa = new javax.swing.JRadioButton();
        cbxEstado = new javax.swing.JComboBox();
        lblEstado = new javax.swing.JLabel();
        lblCEP = new javax.swing.JLabel();
        txtCEP = new javax.swing.JFormattedTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        btnNovo = new javax.swing.JMenu();
        btnSalvar = new javax.swing.JMenu();
        btnPesquisar = new javax.swing.JMenu();
        btnSair = new javax.swing.JMenu();

        jTextField2.setText("jTextField2");

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        getContentPane().setLayout(null);

        jPanel1.setLayout(null);

        jLabel1.setText("Código:");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, 10, 60, 14);

        txtCodigo.setForeground(new java.awt.Color(255, 0, 51));
        txtCodigo.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCodigoKeyPressed(evt);
            }
        });
        jPanel1.add(txtCodigo);
        txtCodigo.setBounds(0, 30, 54, 20);

        txtNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNomeKeyPressed(evt);
            }
        });
        jPanel1.add(txtNome);
        txtNome.setBounds(60, 30, 240, 20);

        jLabel2.setText("Nome:");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(60, 10, 230, 14);

        rbReceita.setText("Receita");
        rbReceita.setOpaque(false);
        rbReceita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbReceitaActionPerformed(evt);
            }
        });
        jPanel1.add(rbReceita);
        rbReceita.setBounds(0, 60, 61, 23);

        rbDespesa.setText("Despesa");
        rbDespesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbDespesaActionPerformed(evt);
            }
        });
        jPanel1.add(rbDespesa);
        rbDespesa.setBounds(70, 60, 67, 23);

        cbxEstado.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cbxEstadoFocusGained(evt);
            }
        });
        jPanel1.add(cbxEstado);
        cbxEstado.setBounds(150, 60, 50, 20);

        lblEstado.setText("Estado:");
        jPanel1.add(lblEstado);
        lblEstado.setBounds(150, 50, 60, 14);

        lblCEP.setText("CEP:");
        jPanel1.add(lblCEP);
        lblCEP.setBounds(210, 50, 23, 14);
        jPanel1.add(txtCEP);
        txtCEP.setBounds(210, 60, 50, 20);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(4, 0, 320, 90);

        btnNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/relatorio_32x32.png"))); // NOI18N
        btnNovo.setText("Novo");
        btnNovo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnNovoMouseClicked(evt);
            }
        });
        jMenuBar1.add(btnNovo);

        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/disquete_32x32.png"))); // NOI18N
        btnSalvar.setText("Salvar");
        btnSalvar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSalvarMouseClicked(evt);
            }
        });
        jMenuBar1.add(btnSalvar);

        btnPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/Lupa_32x32.png"))); // NOI18N
        btnPesquisar.setText("Pesquisar");
        btnPesquisar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnPesquisarMouseClicked(evt);
            }
        });
        jMenuBar1.add(btnPesquisar);

        btnSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/casa_32x32.png"))); // NOI18N
        btnSair.setText("Sair");
        btnSair.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSairMouseClicked(evt);
            }
        });
        jMenuBar1.add(btnSair);

        setJMenuBar(jMenuBar1);

        setBounds(0, 0, 339, 161);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSairMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSairMouseClicked
        if (PrincipalVIEW.bairro == true) {
            PrincipalVIEW.bairro = false;
        } else if (PrincipalVIEW.planoContas == true) {
            PrincipalVIEW.planoContas = false;
        } else if (PrincipalVIEW.cidade == true) {
            PrincipalVIEW.cidade = false;
        } else if (PrincipalVIEW.endereco == true) {
            PrincipalVIEW.endereco = false;
        } else if (ClientesVIEW.profissao == true) {
            ClientesVIEW.profissao = false;
        } else if (ClientesVIEW.tipotel == true) {
            ClientesVIEW.tipotel = false;
        }

        this.dispose();
    }//GEN-LAST:event_btnSairMouseClicked

    private void btnSalvarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSalvarMouseClicked
        if (txtCodigo.getText().equals("")) {
            if (txtNome.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Preencher o campo nome!",
                        "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
            } else {
                if (PrincipalVIEW.bairro == true) {
                    CadastrarBairroVIEW();
                } else if (PrincipalVIEW.planoContas == true) {
                    CadastrarPlanoContasVIEW();
                } else if (PrincipalVIEW.cidade == true) {
                    CadastrarCidadeVIEW();
                } else if (PrincipalVIEW.endereco == true) {
                    CadastrarEnderecoVIEW();
                } else if (ClientesVIEW.profissao == true) {
                    CadastrarProfissaoVIEW();
                } else if (ClientesVIEW.tipotel == true) {
                    CadastrarTipoTelefoneVIEW();
                }
                JOptionPane.showMessageDialog(null, "Salvo com sucesso!",
                        "MENSAGEM", JOptionPane.INFORMATION_MESSAGE);

            }
        } else {

            if (PrincipalVIEW.bairro == true) {
                AlterarBairroVIEW();
            } else if (PrincipalVIEW.planoContas == true) {
                AlterarPlanoContasVIEW();
            } else if (PrincipalVIEW.cidade == true) {
                AlterarCidadeVIEW();
            } else if (PrincipalVIEW.endereco == true) {
                AlterarEnderecoVIEW();
            } else if (ClientesVIEW.profissao == true) {
                AlterarProfissaoVIEW();
            } else if (ClientesVIEW.tipotel == true) {
                AlterarTipoTelefoneVIEW();
            }
            JOptionPane.showMessageDialog(null, "Atualizado com sucesso!",
                    "MENSAGEM", JOptionPane.INFORMATION_MESSAGE);
        }
        UtilVIEW.LimparCampos(jPanel1);
        txtCodigo.requestFocusInWindow();
        UtilVIEW.DesabilitarMenus(btnSalvar, btnPesquisar);
    }//GEN-LAST:event_btnSalvarMouseClicked

    private void cbxEstadoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cbxEstadoFocusGained
        try {
            EstadoCTR objestadoCTR = new EstadoCTR();
            ResultSet sigla = null;
            sigla = objestadoCTR.ConsultarEstadoCTR();
            UtilVIEW.PreencheCombo(sigla, cbxEstado, 1);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_cbxEstadoFocusGained

    private void btnNovoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNovoMouseClicked
        UtilVIEW.HabilitarMenus(btnSalvar, btnPesquisar);
        if (txtCodigo.getText().equals("")) {

        } else {
            UtilVIEW.LimparCampos(jPanel1);
        }
        txtCodigo.requestFocusInWindow();
    }//GEN-LAST:event_btnNovoMouseClicked

    private void txtCodigoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoKeyPressed
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            if (txtCodigo.getText().equals("")) {

            } else {
                RestaurarDiversos();
            }
            txtNome.requestFocusInWindow();
        }
    }//GEN-LAST:event_txtCodigoKeyPressed

    private void txtNomeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomeKeyPressed
        if (PrincipalVIEW.endereco == true) {
            if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
                txtCEP.requestFocusInWindow();
            }
        }

    }//GEN-LAST:event_txtNomeKeyPressed

    private void btnPesquisarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPesquisarMouseClicked
        new PesquisaVIEW(null, true).setVisible(true);
    }//GEN-LAST:event_btnPesquisarMouseClicked

    private void rbReceitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbReceitaActionPerformed
        rbDespesa.setSelected(false);
    }//GEN-LAST:event_rbReceitaActionPerformed

    private void rbDespesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbDespesaActionPerformed
        rbReceita.setSelected(false);
    }//GEN-LAST:event_rbDespesaActionPerformed

    public void AlterarTipoTelefoneVIEW() {
        try {
            TipoTelefoneCTR objtipoCTR = new TipoTelefoneCTR();
            if (objtipoCTR.AlterarTipoTelefoneCTR(txtNome.getText().toUpperCase(), txtCodigo.getText())) {

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao alterar tipo telefone", "ERRO",
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    public void AlterarBairroVIEW() {
        try {
            BairroCTR objbairroCTR = new BairroCTR();
            if (objbairroCTR.AlterarBairroCTR(txtNome.getText().toUpperCase(), txtCodigo.getText())) {

            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao alterar bairro", "ERRO",
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    public void AlterarProfissaoVIEW() {
        try {
            ProfissaoCTR objprofissaoCTR = new ProfissaoCTR();
            if (objprofissaoCTR.AlterarProfissaoCTR(txtNome.getText().toUpperCase(), txtCodigo.getText())) {

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao alterar profissão", "ERRO",
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    public void AlterarCidadeVIEW() {
        try {
            CidadeCTR objcidadeCTR = new CidadeCTR();
            if (objcidadeCTR.AlterarCidadeCTR(txtNome.getText().toUpperCase(),
                    (String) cbxEstado.getSelectedItem(), txtCodigo.getText())) {

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao alterar cidade", "ERRO",
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    public void AlterarEnderecoVIEW() {
        try {
            EnderecoCTR objenderecoCTR = new EnderecoCTR();
            if (objenderecoCTR.AlterarEnderecoCTR(txtNome.getText().toUpperCase(), "",
                    txtCEP.getText(), txtCodigo.getText())) {

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao alterar endereço", "ERRO",
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    public void AlterarPlanoContasVIEW() {
        try {
            PlanoContasCTR objplanoCTR = new PlanoContasCTR();
            String tipo = "";
            if (rbReceita.isSelected() == true) {
                tipo = "RECEITA";
            } else if (rbDespesa.isSelected() == true) {
                tipo = "DESPESA";
            }
            if (objplanoCTR.AlterarPlanoContasCTR(txtNome.getText().toUpperCase(),
                    tipo, txtCodigo.getText())) {

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao alterar plano de contas", "ERRO",
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    public void CadastrarTipoTelefoneVIEW() {
        try {
            TipoTelefoneCTR objtipoCTR = new TipoTelefoneCTR();
            if (objtipoCTR.CadastrarTipoTelefoneCTR(txtNome.getText().toUpperCase())) {

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao salvar Tipo Telefone!", "ERRO",
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    public void CadastrarProfissaoVIEW() {
        try {
            ProfissaoCTR objprofissaoCTR = new ProfissaoCTR();
            if (objprofissaoCTR.CadastrarProfissaoCTR(txtNome.getText().toUpperCase())) {

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao salvar profissão!", "ERRO",
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    public void CadastrarBairroVIEW() {
        try {
            BairroCTR objbairroCTR = new BairroCTR();
            if (objbairroCTR.CadastrarBairroCTR(txtNome.getText().toUpperCase())) {

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao salvar o bairro!", "ERRO",
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    public void CadastrarCidadeVIEW() {
        try {
            CidadeCTR objcidadeCTR = new CidadeCTR();
            if (objcidadeCTR.CadastrarCidadeCTR(txtNome.getText().toUpperCase(),
                    (String) cbxEstado.getSelectedItem())) {

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao salvar a cidade!", "ERRO",
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    public void CadastrarEnderecoVIEW() {
        try {
            EnderecoCTR objenderecoCTR = new EnderecoCTR();
            if (objenderecoCTR.CadastrarEnderecoCTR(txtNome.getText().toUpperCase(),
                    "", txtCEP.getText())) {

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao salvar o endereço!", "ERRO",
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    public void CadastrarPlanoContasVIEW() {
        try {
            PlanoContasCTR objplanoCTR = new PlanoContasCTR();
            String tipo = "";
            if (rbReceita.isSelected() == true) {
                tipo = "RECEITA";
            } else if (rbDespesa.isSelected() == true) {
                tipo = "DESPESA";
            }

            if (objplanoCTR.CadastrarPlanoContasCTR(txtNome.getText().toUpperCase(),
                    tipo)) {

            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao salvar Plano de Contas!", "ERRO",
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    public void RestaurarDiversos() {
        try {
            ResultSet restaura = null;
            if (PrincipalVIEW.planoContas == true) {
                PlanoContasCTR objplanoCTR = new PlanoContasCTR();

                restaura = objplanoCTR.ConsultarPlanoContasCTR(txtCodigo.getText(),
                        "null", "null");
                if (restaura.next()) {
                    txtNome.setText(restaura.getString("descricao"));
                    if (restaura.getString("tipo").equals("RECEITA")) {
                        rbReceita.setSelected(true);
                        rbDespesa.setSelected(false);
                    } else if (restaura.getString("tipo").equals("DESPESA")) {
                        rbDespesa.setSelected(true);
                        rbReceita.setSelected(false);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Código não encontrado!",
                            "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
                }
            } else if (PrincipalVIEW.bairro == true) {
                BairroCTR objbairroCTR = new BairroCTR();
                restaura = objbairroCTR.ConsultarBairroCTR(txtCodigo.getText(), "null");
                if (restaura.next()) {
                    txtNome.setText(restaura.getString("nome"));
                } else {
                    JOptionPane.showMessageDialog(null, "Código não encontrado!",
                            "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
                }
            } else if (PrincipalVIEW.cidade == true) {
                CidadeCTR objcidadeCTR = new CidadeCTR();
                restaura = objcidadeCTR.ConsultarCidadeCTR(txtCodigo.getText(), "null", "null");
                if (restaura.next()) {
                    txtNome.setText(restaura.getString("nome"));
                    cbxEstado.removeAllItems();
                    cbxEstado.addItem(restaura.getString("estado"));
                } else {
                    JOptionPane.showMessageDialog(null, "Código não encontrado!",
                            "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
                }
            } else if (PrincipalVIEW.endereco == true) {
                EnderecoCTR objenderecoCTR = new EnderecoCTR();
                restaura = objenderecoCTR.ConsultarEnderecoCTR(txtCodigo.getText(), "null", "null");
                if (restaura.next()) {
                    txtNome.setText(restaura.getString("nome"));
                    txtCEP.setText(restaura.getString("cep"));
                } else {
                    JOptionPane.showMessageDialog(null, "Código não encontrado!",
                            "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
                }
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Erro ao restaurar", "ERRO",
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BairroVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BairroVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BairroVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BairroVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                BairroVIEW dialog = new BairroVIEW(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu btnNovo;
    private javax.swing.JMenu btnPesquisar;
    private javax.swing.JMenu btnSair;
    private javax.swing.JMenu btnSalvar;
    private javax.swing.JComboBox cbxEstado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JLabel lblCEP;
    private javax.swing.JLabel lblEstado;
    private javax.swing.JRadioButton rbDespesa;
    private javax.swing.JRadioButton rbReceita;
    private javax.swing.JFormattedTextField txtCEP;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtNome;
    // End of variables declaration//GEN-END:variables
}
