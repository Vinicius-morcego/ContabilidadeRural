/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SistemaVIEW;

import SistemaCTR.BairroCTR;
import SistemaCTR.CidadeCTR;
import SistemaCTR.EnderecoCTR;
import SistemaCTR.PessoaCTR;
import SistemaCTR.PlanoContasCTR;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Vinicius
 */
public class PesquisaVIEW extends javax.swing.JDialog {

    /**
     * Creates new form PesquisaVIEW
     *
     * @param parent
     * @param modal
     */
    public PesquisaVIEW(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setTitle("PESQUISAR");
        UtilVIEW.Icone(this);
        this.setLocationRelativeTo(null);
        if (PrincipalVIEW.cliente == false) {
            btnImprimir.setVisible(false);
        }
        tblPesquisar.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "", "NOME"
                }) {
                    private static final long serialVersionUID = -2093013531712007495L;

                    @Override
                    public boolean isCellEditable(int rowIndex, int mColIndex) {
                        return false;
                    }
                });
        tblPesquisar.getColumnModel().getColumn(0).setMaxWidth(40);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtPesquisar = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPesquisar = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        btnPesquisar = new javax.swing.JMenu();
        btnImprimir = new javax.swing.JMenu();
        btnIncluir = new javax.swing.JMenu();
        btnSair = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(null);

        txtPesquisar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisarKeyReleased(evt);
            }
        });
        getContentPane().add(txtPesquisar);
        txtPesquisar.setBounds(10, 10, 310, 20);

        tblPesquisar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tblPesquisar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblPesquisar.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblPesquisar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPesquisarMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblPesquisar);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 40, 310, 180);

        btnPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/Lupa_32x32.png"))); // NOI18N
        btnPesquisar.setText("Pesquisar");
        btnPesquisar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnPesquisarMouseClicked(evt);
            }
        });
        jMenuBar1.add(btnPesquisar);

        btnImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/Imprimir_32x32.png"))); // NOI18N
        btnImprimir.setText("Imprimir");
        btnImprimir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnImprimirMouseClicked(evt);
            }
        });
        jMenuBar1.add(btnImprimir);

        btnIncluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/Alterar_32x32.png"))); // NOI18N
        btnIncluir.setText("Incluir");
        btnIncluir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnIncluirMouseClicked(evt);
            }
        });
        jMenuBar1.add(btnIncluir);

        btnSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/casa_32x32.png"))); // NOI18N
        btnSair.setText("Sair");
        btnSair.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSairMouseClicked(evt);
            }
        });
        jMenuBar1.add(btnSair);

        setJMenuBar(jMenuBar1);

        setBounds(0, 0, 353, 301);
    }// </editor-fold>//GEN-END:initComponents

    private void btnIncluirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnIncluirMouseClicked
        this.dispose();
        if (PrincipalVIEW.cliente == true) {
            new ClientesVIEW(null, true).setVisible(true);
        } else if (PrincipalVIEW.bairro == true
                || PrincipalVIEW.cidade == true
                || PrincipalVIEW.planoContas == true
                || PrincipalVIEW.endereco == true) {
            new BairroVIEW(null, true).setVisible(true);
        }

    }//GEN-LAST:event_btnIncluirMouseClicked

    private void btnSairMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSairMouseClicked
        int op = -1;
        op = JOptionPane.showConfirmDialog(null, "Deseja sair?", "PERGUNTA",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (op == 0) {
            if (PrincipalVIEW.bairro == true) {
                PrincipalVIEW.bairro = false;
            } else if (PrincipalVIEW.cliente == true) {
                PrincipalVIEW.cliente = false;
            } else if (PrincipalVIEW.cidade == true) {
                PrincipalVIEW.cidade = false;
            } else if (PrincipalVIEW.planoContas == true) {
                PrincipalVIEW.planoContas = false;
            } else if (PrincipalVIEW.endereco == true) {
                PrincipalVIEW.endereco = false;
            }
            this.dispose();
        } else if (op == 1) {

        }

    }//GEN-LAST:event_btnSairMouseClicked

    private void btnImprimirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnImprimirMouseClicked
        try {
            PrincipalVIEW.cliente = false;
            this.dispose();
            UtilVIEW objutil = new UtilVIEW();
            objutil.ImprimirClienteIndividual(tblPesquisar.getValueAt(tblPesquisar.getSelectedRow(), 0).toString(),
                    idade.get(tblPesquisar.getSelectedRow()).toString());
        } catch (ArrayIndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "Selecionar o cliente!", "ATENÇÃO",
                    JOptionPane.WARNING_MESSAGE);

        }

    }//GEN-LAST:event_btnImprimirMouseClicked

    private void btnPesquisarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPesquisarMouseClicked
        ConsultarDiversos();
    }//GEN-LAST:event_btnPesquisarMouseClicked

    private void txtPesquisarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarKeyReleased
        if (txtPesquisar.getText().equals("")) {
            UtilVIEW.LimparTabela(tblPesquisar);
        } else {
            ConsultarDiversos();
        }

    }//GEN-LAST:event_txtPesquisarKeyReleased

    private void tblPesquisarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPesquisarMouseClicked
        try {
            if (evt.getClickCount() == 2) {
                if (PrincipalVIEW.endereco == true) {
                    ClientesVIEW.txtEndereco.setText(tblPesquisar.getValueAt(
                            tblPesquisar.getSelectedRow(), 1).toString());
                    PrincipalVIEW.endereco = false;
                    ClientesVIEW.txtNumero.requestFocusInWindow();
                } else if (PrincipalVIEW.bairro == true) {
                    ClientesVIEW.txtBairro.setText(tblPesquisar.getValueAt(
                            tblPesquisar.getSelectedRow(), 1).toString());
                    PrincipalVIEW.bairro = false;
                } else if (PrincipalVIEW.cidade == true) {
                    ClientesVIEW.txtCidade.setText(tblPesquisar.getValueAt(
                            tblPesquisar.getSelectedRow(), 1).toString());
                    ClientesVIEW.txtEstado.setText(lista.get(tblPesquisar.getSelectedRow()).toString());
                    PrincipalVIEW.cidade = false;
                    ClientesVIEW.txtObservacoes.requestFocusInWindow();
                }
                this.dispose();
            }

        } catch (Exception e) {
        }
    }//GEN-LAST:event_tblPesquisarMouseClicked

    private void ConsultarDiversos() {
        try {
            ResultSet consulta = null;
            if (PrincipalVIEW.bairro == true) {
                BairroCTR objbairroCTR = new BairroCTR();
                consulta = objbairroCTR.ConsultarBairroCTR("0", txtPesquisar.getText().toUpperCase());
            } else if (PrincipalVIEW.planoContas == true) {
                PlanoContasCTR objplanoCTR = new PlanoContasCTR();
                consulta = objplanoCTR.ConsultarPlanoContasCTR("0", txtPesquisar.getText().toUpperCase(),
                        txtPesquisar.getText().toUpperCase());
            } else if (PrincipalVIEW.endereco == true) {
                EnderecoCTR objenderecoCTR = new EnderecoCTR();
                consulta = objenderecoCTR.ConsultarEnderecoCTR("0", txtPesquisar.getText().toUpperCase());
            } else if (PrincipalVIEW.cidade == true) {
                CidadeCTR objcidadeCTR = new CidadeCTR();
                consulta = objcidadeCTR.ConsultarCidadeCTR("0",
                        txtPesquisar.getText().toUpperCase(), txtPesquisar.getText().toUpperCase());
            }
            RestaurarDiversos(consulta);
        } catch (Exception e) {
            System.out.println("Erro consultar diversos " + e.getMessage());
        }
    }
    ArrayList lista = new ArrayList();
    ArrayList idade = new ArrayList();

    public void RestaurarDiversos(ResultSet rs) {
        try {
            DefaultTableModel dtm = (DefaultTableModel) tblPesquisar.getModel();
            dtm.setRowCount(0);
            while (rs.next()) {
                if (PrincipalVIEW.cidade == true) {
                    lista.add(rs.getString("estado"));
                } else if (PrincipalVIEW.cliente == true) {
                    idade.add(rs.getString("idade"));
                }
                dtm.addRow(new Object[]{rs.getString(1), rs.getString(2)});
            }
            tblPesquisar.setModel(dtm);

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Erro ao restaurar diversos!",
                    "ERRO", JOptionPane.ERROR_MESSAGE);
            System.out.println("" + e.getMessage());
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PesquisaVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PesquisaVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PesquisaVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PesquisaVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                PesquisaVIEW dialog = new PesquisaVIEW(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu btnImprimir;
    private javax.swing.JMenu btnIncluir;
    private javax.swing.JMenu btnPesquisar;
    private javax.swing.JMenu btnSair;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblPesquisar;
    private javax.swing.JTextField txtPesquisar;
    // End of variables declaration//GEN-END:variables
}
